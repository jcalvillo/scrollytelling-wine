<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0603.1953                               -->
<workbook original-version='10.4' source-build='10.4.8 (10400.18.0603.1953)' source-platform='mac' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Wine_Exploratory_final' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='winemag-data-130k-v2' inline='true' name='federated.0a5uupe1ux0b1s102pj161f9ac66' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='winemag-data-130k-v2' name='textscan.0nqshyf0eqxob11al7axt17b1spm'>
            <connection class='textscan' directory='/Users/jeylee/Downloads' filename='winemag-data-130k-v2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='wine_type_v2' name='textscan.0i9gz420f9qp670zzbzeg03g0yis'>
            <connection class='textscan' directory='/Users/jeylee/Downloads' filename='wine_type_v2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='wine_words_v2' name='textscan.1s5e9jx10yxfs8179dyt30hep92l'>
            <connection class='textscan' directory='/Users/jeylee/Downloads' filename='wine_words_v2.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[winemag-data-130k-v2.csv].[variety]' />
              <expression op='[wine_words_v2.csv].[varietal]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[winemag-data-130k-v2.csv].[variety]' />
                <expression op='[wine_type_v2.csv].[Varietal]' />
              </expression>
            </clause>
            <relation connection='textscan.0nqshyf0eqxob11al7axt17b1spm' name='winemag-data-130k-v2.csv' table='[winemag-data-130k-v2#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='string' name='country' ordinal='1' />
                <column datatype='string' name='description' ordinal='2' />
                <column datatype='string' name='designation' ordinal='3' />
                <column datatype='integer' name='points' ordinal='4' />
                <column datatype='real' name='price' ordinal='5' />
                <column datatype='string' name='province' ordinal='6' />
                <column datatype='string' name='region_1' ordinal='7' />
                <column datatype='string' name='region_2' ordinal='8' />
                <column datatype='string' name='taster_name' ordinal='9' />
                <column datatype='string' name='taster_twitter_handle' ordinal='10' />
                <column datatype='string' name='title' ordinal='11' />
                <column datatype='string' name='variety' ordinal='12' />
                <column datatype='string' name='winery' ordinal='13' />
              </columns>
            </relation>
            <relation connection='textscan.0i9gz420f9qp670zzbzeg03g0yis' name='wine_type_v2.csv' table='[wine_type_v2#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Varietal' ordinal='0' />
                <column datatype='string' name='Wine_type' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1s5e9jx10yxfs8179dyt30hep92l' name='wine_words_v2.csv' table='[wine_words_v2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='varietal' ordinal='0' />
              <column datatype='string' name='Word' ordinal='1' />
              <column datatype='integer' name='Cnt' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[points]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>points</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_1]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>region_1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_2]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>region_2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_name]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>taster_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_twitter_handle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_twitter_handle]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>taster_twitter_handle</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variety</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variety]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>variety</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winemag-data-130k-v2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Varietal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Varietal]</local-name>
            <parent-name>[wine_type_v2.csv]</parent-name>
            <remote-alias>Varietal</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wine_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wine_type]</local-name>
            <parent-name>[wine_type_v2.csv]</parent-name>
            <remote-alias>Wine_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wine_type_v2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varietal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[varietal]</local-name>
            <parent-name>[wine_words_v2.csv]</parent-name>
            <remote-alias>varietal</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Word]</local-name>
            <parent-name>[wine_words_v2.csv]</parent-name>
            <remote-alias>Word</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cnt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cnt]</local-name>
            <parent-name>[wine_words_v2.csv]</parent-name>
            <remote-alias>Cnt</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wine_words_v2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Reset' datatype='string' name='[Calculation_4799359487381843971]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filters&quot;' />
      </column>
      <column caption='Rating/Price' datatype='real' name='[Calculation_4799359487394213892]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([points]/[price],2)' />
      </column>
      <column datatype='integer' name='[Cnt]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Varietal]' role='dimension' type='nominal' />
      <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Word]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
      <column caption='Region 2' datatype='string' name='[region_2]' role='dimension' type='nominal' />
      <column caption='Taster Name' datatype='string' name='[taster_name]' role='dimension' type='nominal' />
      <column caption='Taster Twitter Handle' datatype='string' name='[taster_twitter_handle]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Varietal1' datatype='string' name='[varietal]' role='dimension' type='nominal' />
      <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <column-instance column='[Cnt]' derivation='None' name='[none:Cnt:ok]' pivot='key' type='ordinal' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Wine_type]' derivation='None' name='[none:Wine_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[points]' derivation='None' name='[none:points:ok]' pivot='key' type='ordinal' />
      <column-instance column='[points]' derivation='None' name='[none:points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='None' name='[none:price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
      <group caption='Action (Cnt,Varietal,Wine type,Word,Country,Varietal1,Variety)' hidden='true' name='[Action (Cnt,Varietal,Wine type,Word,Country,Varietal1,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cnt:ok]' />
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[Word]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[varietal]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Variety)' hidden='true' name='[Action (Country,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (F1,Varietal,Wine type,Country,Description,Points,Price,Variety)' hidden='true' name='[Action (F1,Varietal,Wine type,Country,Description,Points,Price,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:F1:ok]' />
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[description]' />
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[none:price:ok]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Points,Variety)' hidden='true' name='[Action (Points,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset)' hidden='true' name='[Action (Reset)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4799359487381843971]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal)' hidden='true' name='[Action (Varietal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal,Country,Variety)' hidden='true' name='[Action (Varietal,Country,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal,Wine type,Country,Description,Variety)' hidden='true' name='[Action (Varietal,Wine type,Country,Description,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[description]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal,Wine type,Country,Variety)' hidden='true' name='[Action (Varietal,Wine type,Country,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal,Wine type,Word,Country,Varietal1,Variety)' hidden='true' name='[Action (Varietal,Wine type,Word,Country,Varietal1,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[Word]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[varietal]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Varietal,Wine type,Word,Country,Variety)' hidden='true' name='[Action (Varietal,Wine type,Word,Country,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Varietal]' />
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[Word]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Variety)' hidden='true' name='[Action (Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Wine type)' hidden='true' name='[Action (Wine type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Wine_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Wine type,Word,Country,Variety)' hidden='true' name='[Action (Wine type,Word,Country,Variety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Wine_type]' />
          <groupfilter function='level-members' level='[Word]' />
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[variety]' />
        </groupfilter>
      </group>
      <group caption='Action (Word)' hidden='true' name='[Action (Word)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Word]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,Points,Price)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country:nk]' />
          <groupfilter function='level-members' level='[none:points:qk]' />
          <groupfilter function='level-members' level='[none:price:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Points,Price)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:points:qk]' />
          <groupfilter function='level-members' level='[none:price:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, province'>
          <field>[country]</field>
          <field>[province]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/jeylee/Documents/My Tableau Repository/Datasources/winemag-data-130k-v2.tde' schema='Extract' tablename='Extract' update-time='08/07/2018 07:10:59 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_4799359487394213892]' value='[Extract].[Calculation_4799359487394213892]' />
            <map key='[Cnt]' value='[Extract].[Cnt]' />
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Varietal]' value='[Extract].[Varietal]' />
            <map key='[Wine_type]' value='[Extract].[Wine_type]' />
            <map key='[Word]' value='[Extract].[Word]' />
            <map key='[country]' value='[Extract].[country]' />
            <map key='[description]' value='[Extract].[description]' />
            <map key='[designation]' value='[Extract].[designation]' />
            <map key='[points]' value='[Extract].[points]' />
            <map key='[price]' value='[Extract].[price]' />
            <map key='[province]' value='[Extract].[province]' />
            <map key='[region_1]' value='[Extract].[region_1]' />
            <map key='[region_2]' value='[Extract].[region_2]' />
            <map key='[taster_name]' value='[Extract].[taster_name]' />
            <map key='[taster_twitter_handle]' value='[Extract].[taster_twitter_handle]' />
            <map key='[title]' value='[Extract].[title]' />
            <map key='[varietal]' value='[Extract].[varietal1]' />
            <map key='[variety]' value='[Extract].[variety]' />
            <map key='[winery]' value='[Extract].[winery]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_4799359487394213892]' formula='ROUND([points]/[price],2)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='537999' timestamp-start='2018-08-07 07:10:59.253' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_4799359487394213892</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_4799359487394213892]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_4799359487394213892</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>567</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.040000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>21.5</statistic>
                <statistic aggregation='Count' datatype='integer'>511063</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cnt</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Cnt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cnt</remote-alias>
              <ordinal>1</ordinal>
              <family>wine_words_v2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>127</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>144</statistic>
                <statistic aggregation='Max' datatype='integer'>5508</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>2</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72822</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>35075609534.0</statistic>
                <statistic aggregation='Avg' datatype='real'>65196.421432010095</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>129970</statistic>
                <statistic aggregation='Stdev' datatype='real'>37626.055485616045</statistic>
                <statistic aggregation='StdevP' datatype='real'>37626.020517081743</statistic>
                <statistic aggregation='Var' datatype='real'>1415720051.4066572</statistic>
                <statistic aggregation='VarP' datatype='real'>1415717419.9518564</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3048458777379974.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Varietal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Varietal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Varietal</remote-alias>
              <ordinal>4</ordinal>
              <family>wine_type_v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cabernet Franc&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zinfandel&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wine_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wine_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wine_type</remote-alias>
              <ordinal>5</ordinal>
              <family>wine_type_v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Red&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Red&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Word</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Word]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Word</remote-alias>
              <ordinal>6</ordinal>
              <family>wine_words_v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;alcohol&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vanilla&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Argentina&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537859</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>8</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>67293</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;. Nice drinking wine, dry and silky, with generous berry and herb flavors and a tasteful touch of fine oak. That said, it&apos;s &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zonchera is Ceretto&apos;s more affordable base Barolo and it offers an excellent taste profile for those who are new to Nebbiolo&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>designation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[designation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>designation</remote-alias>
              <ordinal>9</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18635</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;??? Vineyard&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwirch Reserve&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>375186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>points</remote-name>
              <remote-type>16</remote-type>
              <local-name>[points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>points</remote-alias>
              <ordinal>10</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>47712091.0</statistic>
                <statistic aggregation='Avg' datatype='real'>88.684348855667011</statistic>
                <statistic aggregation='Min' datatype='integer'>80</statistic>
                <statistic aggregation='Max' datatype='integer'>100</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1114285930541623</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1114257013851825</statistic>
                <statistic aggregation='Var' datatype='real'>9.6809878896750039</statistic>
                <statistic aggregation='VarP' datatype='real'>9.6809698952402758</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4236524075.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>4</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>11</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>338</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.0</statistic>
                <statistic aggregation='Max' datatype='real'>2500.0</statistic>
                <statistic aggregation='Count' datatype='integer'>511063</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province</remote-alias>
              <ordinal>12</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>283</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aconcagua Costa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Župa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537859</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region_1</remote-alias>
              <ordinal>13</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>748</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adelaida District&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zonda Valley&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>440188</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region_2</remote-alias>
              <ordinal>14</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;California Other&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Willamette Valley&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>270319</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taster_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taster_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taster_name</remote-alias>
              <ordinal>15</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alexander Peartree&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Virginie Boone&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>424837</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taster_twitter_handle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taster_twitter_handle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taster_twitter_handle</remote-alias>
              <ordinal>16</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;@AnneInVino&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;@worldwineguys&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>398006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>17</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>67031</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;:Nota Bene 2006 Verhey Vineyard Malbec (Yakima Valley)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zynthesis 2011 Zinfandel (Lodi)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>varietal1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[varietal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>varietal1</remote-alias>
              <ordinal>18</ordinal>
              <family>wine_words_v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cabernet Franc&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zinfandel&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variety</remote-name>
              <remote-type>129</remote-type>
              <local-name>[variety]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>variety</remote-alias>
              <ordinal>19</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cabernet Franc&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zinfandel&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winery</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>winery</remote-alias>
              <ordinal>20</ordinal>
              <family>winemag-data-130k-v2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10232</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;:Nota Bene&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zynthesis&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>537999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.565854' measure-ordering='alphabetic' measure-percentage='0.434146' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Wine_type:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:variety:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albariño&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asprinio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biancu Gentile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Braucol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabernet Sauvignon-Merlot-Shiraz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carmenère&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chardonnay Weissburgunder&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cococciola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edelzwicker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frappato&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garnacha-Tempranillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenache Noir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacquez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lemberger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malbec-Carménère&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maria Gomes-Bical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Merlot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muscadel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nerello Cappuccio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palomino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pignoletto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piquepoul Blanc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pugnitello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rolle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sämling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savagnin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shiraz-Viognier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syrah-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tempranillo Blanco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tinta del Toro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Touriga Franca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ugni Blanc-Colombard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vespolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vranac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ansonica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baco Noir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boğazkere&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cabernet Pfeffer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carcajolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cesanese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chenin Blanc-Chardonnay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Debit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Feteasca Neagra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garnacha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grecanico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grüner Veltliner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kisi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malagouzia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malvasia Nera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mavrotragano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meseguera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moscato Giallo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskat Ottonel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange Muscat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petit Verdot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pinot Meunier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prié Blanc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rieslaner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roussanne-Marsanne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sauvignon Blanc-Chenin Blanc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shiraz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Vincent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tamianka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terrantez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tocai Friulano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trincadeira&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Verdil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Viognier-Roussanne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zelen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aidani&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aragonez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbera-Nebbiolo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bordeaux-style Red Blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabernet Sauvignon-Cabernet Franc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carignane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chancellor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ciliegiolo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dornfelder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forcallà&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garnacha-Cabernet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenache&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Insolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lambrusco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malbec-Bonarda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mantonico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melnik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monastrell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mourvèdre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nasco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;País&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Picolit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pinot Noir-Syrah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Provence red blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rkatsiteli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rufete&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sauvignon Gris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shiraz-Malbec&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syrah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tannat-Cabernet Franc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinta Barroca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torbato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tsapournakos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermentino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vitovska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Žilavka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alicante&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austrian Red Blend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blanc du Bois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabernet Franc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabernet Sauvignon-Tempranillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Casavecchia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chardonnay-Riesling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombard-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Encruzado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fumé Blanc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gewürztraminer-Riesling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenache-Syrah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kadarka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loureiro-Arinto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malbec-Tannat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marsanne-Viognier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Merlot-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morio Muskat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muscat Blanc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neuburger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parraleta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pinot Blanc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portuguese Red&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rara Neagra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roscetto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sangiovese-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schwartzriesling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Silvaner-Traminer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrah-Malbec&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tempranillo-Malbec&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tinta Miúda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trajadura&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valvin Muscat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vignoles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;White Blend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albarossa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Assyrtico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bual&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabernet Sauvignon-Sangiovese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carmenère-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chardonnay-Albariño&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coda di Volpe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ekigaïna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Freisa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gelber Muskateller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenache-Carignan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Listán Negro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malbec-Merlot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Merlot-Argaman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montepulciano&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muscadelle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nerello Mascalese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pansa Blanca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pignolo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plavac Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rabigato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romorantin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sangiovese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Savatiano&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sideritis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syrah-Carignan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tempranillo Blend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tinta Fina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Touriga Nacional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uva di Troia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vidadillo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vranec&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Airen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argaman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bastardo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bordeaux-style White Blend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabernet Sauvignon-Carmenère&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carignano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charbono&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cinsault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Francisa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garnacha-Cariñena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenache Blanc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inzolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lambrusco di Sorbara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malbec-Cabernet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manzoni&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monastrell-Petit Verdot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mourvèdre-Syrah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebbiolo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pallagrello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Picpoul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pinot-Chardonnay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provence white blend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryzlink Rýnský&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sauvignon Musqué&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shiraz-Mourvèdre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrah-Bonarda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tannat-Merlot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tinta Cao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Torontel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tsolikouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermentino Nero&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viura&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zinfandel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alvarinho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Babosa Negro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bobal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cabernet Merlot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cannonau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cerceal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chelois&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Counoise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fernão Pires&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gamza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Graševina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gros Manseng&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kerner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Magliocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malvasia Fina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mavrodaphne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Merlot-Tannat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moscato&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Muscatel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Okuzgozu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Petit Manseng&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pinot Gris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poulsard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhône-style White Blend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roussanne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sauvignon Blanc-Assyrtiko&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seyval Blanc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spätburgunder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrah-Viognier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Teroldego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tinto Velasco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Treixadura&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Verdelho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Viognier-Grenache Blanc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xynisteri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abouriou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antão Vaz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bombino Bianco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carignan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cesanese d&apos;Affile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chenin Blanc-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Feteascǎ Regalǎ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garnacha Blanca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grechetto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hárslevelü&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kotsifali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malagouzia-Chardonnay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malvasia-Viura&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mavroudi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Misket&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moscato Rosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muskateller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orangetraube&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Petite Sirah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pinot Nero&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prieto Picudo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riesling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roussanne-Viognier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sauvignon Blanc-Sauvignon Gris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shiraz-Cabernet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Susumaniello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamjanika&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thrapsathiri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tokaji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trollinger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Verdosilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viognier-Valdiguié&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zibibbo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Altesse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blauer Portugieser&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cabernet Franc-Malbec&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Çalkarası&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chardonnay-Viognier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corvina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Favorita&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gamay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Graciano&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Groppello&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karasakiz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madeira Blend&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malvasia Bianca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maturana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Merlot-Shiraz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moscatel Graúdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muscat Hamburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuragus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Perricone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinot Grigio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portuguiser&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Refosco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roter Veltliner&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sauvignon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Semillon-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Souzao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syrah-Petite Sirah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempranillo-Tannat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tinto del Pais&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trebbiano di Lugana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verdejo-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Viognier-Chardonnay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xinisteri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arinto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biancale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bovale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabernet Sauvignon-Malbec&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carineña&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chardonel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clairette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Durella&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franconia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garnacha-Monastrell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenache Blend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Irsai Oliver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lambrusco Grasparossa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malbec-Cabernet Franc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mencía&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monastrell-Syrah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mtsvane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Negrette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pallagrello Bianco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piedirosso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pinotage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prugnolo Gentile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roditis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sacy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sauvignon-Sémillon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shiraz-Roussanne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syrah-Cabernet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tannat-Syrah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tinta de Toro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrontés&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turbiana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernaccia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viura-Chardonnay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zlahtina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alicante Bouschet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austrian white blend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blatina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabernet Franc-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabernet-Malbec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Castelão&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chardonnay-Sauvignon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Colombard-Ugni Blanc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Erbaluce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Furmint&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glera&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grignolino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalecik Karasi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macabeo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malbec-Tempranillo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marselan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Merlot-Grenache&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moscadello&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Muscat Blanc à Petits Grains&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nielluciu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Passerina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pinot Blanc-Chardonnay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portuguese Rosé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rebo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rosé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sangiovese-Syrah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sciaccerellu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Siria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syrah-Merlot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tempranillo-Merlot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinta Negra Mole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Traminer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veltliner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vilana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;White Port&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aligoté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Auxerrois&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blauburger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabernet Franc-Carmenère&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabernet-Shiraz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catalanesca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chardonnay-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Espadeiro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;G-S-M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Godello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grillo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kangoun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macabeo-Chardonnay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malvar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marzemino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Merlot-Malbec&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moscatel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muscat Canelli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pecorino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pinot Blanc-Pinot Noir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portuguese Sparkling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rebula&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosenmuskateller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saperavi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sémillon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sirica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syrah-Mourvèdre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tempranillo-Shiraz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tinta Roriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traminette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Verdeca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vinhão&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Riesling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alvarelhão&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Babić&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Blaufränkisch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cabernet Franc-Merlot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canaiolo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Centesimino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chasselas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corvina, Rondinella, Molinara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fer Servadou&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gamay Noir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gragnano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gros and Petit Manseng&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kekfrankos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madeleine Angevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malvasia di Candia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauzac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Merlot-Syrah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moscatel Roxo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Muscat of Alexandria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ojaleshi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Petit Courbu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pinot Grigio-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Posip&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhône-style Red Blend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rotgipfler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sercial&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sparkling Blend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syrah-Tempranillo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Teran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tinto Fino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trebbiano Spoletino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Verdejo-Viura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Viognier-Gewürztraminer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xinomavro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alvarinho-Chardonnay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bacchus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bobal-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cabernet Moravia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caprettone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cercial&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chenin Blanc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dafni&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Feteasca&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Garganega&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grauburgunder&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gros Plant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kinali Yapincak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malagousia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malvasia Istriana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mavrokalavryta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Merseguera-Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moscato di Noto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Muskat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ondenc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petit Meslier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pinot Gris-Gewürztraminer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Premsal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ribolla Gialla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roussanne-Grenache Blanc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sauvignon Blanc-Chardonnay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sherry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Laurent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tămâioasă Românească&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Teroldego Rotaliano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tocai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trepat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Verdicchio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Viognier-Marsanne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yapincak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aleatico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Assyrtiko&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Black Monukka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabernet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabernet Sauvignon-Shiraz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carmenère-Syrah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chardonnay-Pinot Blanc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Códega do Larinho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elbling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Friulano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelber Traminer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenache-Mourvèdre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jampal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loin de l&apos;Oeil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malbec-Petit Verdot&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marsanne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merlot-Cabernet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morava&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muscadine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nero d&apos;Avola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papaskarasi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pinot Auxerrois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plyto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raboso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rosado&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sangiovese Cabernet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scheurebe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Siegerrebe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syrah-Grenache&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tempranillo-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tinta Francisca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Touriga Nacional Blend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uvalino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vidal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Weissburgunder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albanello&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arneis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biancolella&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brachetto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabernet Sauvignon-Merlot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cariñena-Garnacha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chardonnay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claret&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Durif&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frankovka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garnacha-Syrah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenache Gris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacquère&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lambrusco Salamino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malbec-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Gomes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meritage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mondeuse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Müller-Thurgau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Negroamaro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pallagrello Nero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pigato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinotage-Merlot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prunelard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roditis-Moschofilero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sagrantino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sauvignonasse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shiraz-Tempranillo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrah-Cabernet Franc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tempranillo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tinta del Pais&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Touriga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ugni Blanc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vespaiolo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viura-Verdejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zweigelt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agiorgitiko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baga-Touriga Nacional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bombino Nero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cabernet Sauvignon Grenache&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carignan-Grenache&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chambourcin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chenin Blanc-Viognier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dolcetto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garnacha Blend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hondarrabi Zuri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuntra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malbec&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mandilaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mavrud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mission&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moschofilero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Narince&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Petite Verdot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pinot Noir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Primitivo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riesling-Chardonnay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roviello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sauvignon Blanc-Semillon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shiraz-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sylvaner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tannat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Timorasso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tokay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trousseau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Verduzzo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Viosinho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zierfandler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alsace white blend&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Avesso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blauburgunder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabernet Franc-Lemberger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabernet-Syrah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catarratto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chardonnay-Semillon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cortese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Falanghina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gaglioppo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gouveio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grolleau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karalahna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macabeo-Moscatel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malvasia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mataro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Merlot-Petite Verdot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moscatel de Alejandría&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muscat d&apos;Alexandrie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nosiola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pedro Ximénez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pinot Blanc-Viognier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portuguese White&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Red Blend&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roter Traminer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saperavi-Merlot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semillon-Chardonnay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sousão&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syrah-Petit Verdot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tempranillo-Syrah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tintilia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trebbiano&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Verdejo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viognier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xarel-lo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alfrocheiro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Athiri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Black Muscat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabernet Blend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabernet Sauvignon-Syrah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carricante&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chardonnay-Pinot Gris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emir&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Früburgunder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gewürztraminer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenache-Shiraz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johannisberg Riesling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Loureiro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malbec-Syrah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marsanne-Roussanne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Merlot-Cabernet Franc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morillon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muscat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nero di Troia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paralleda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pinot Bianco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ramisco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sangiovese Grosso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schiava&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silvaner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrah-Grenache-Viognier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tempranillo-Garnacha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tinta Madeira&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Touriga Nacional-Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Valdiguié&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vidal Blanc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Welschriesling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aglianico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aragonês&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barbera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bonarda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabernet Sauvignon-Barbera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carignan-Syrah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Champagne Blend&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinuri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Doña Blanca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Folle Blanche&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garnacha Tintorera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greco Bianco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Incrocio Manzoni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lagrein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malbec Blend&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mansois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mazuelo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molinara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moschofilero-Chardonnay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nascetta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otskhanuri Sapere&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Picapoll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pinot Noir-Gamay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prosecco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivaner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ruché&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sauvignon Blanc-Verdejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shiraz-Grenache&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Symphony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tannat-Cabernet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tinta Amarela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tokay Pinot Gris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trousseau Gris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Verduzzo Friulano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vital&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zierfandler-Rotgipfler&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Word:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;juicy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tropical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;berry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;lime&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;currant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;citrus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pepper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;blackberry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;lychee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;grapefruit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sweet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;alcohol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;leather&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;vanilla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fresh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;strawberry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cherries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;oak&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;dark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;soft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fruity&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;structured&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;herbal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tobacco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cranberry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;plum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cherry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;peach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;apple&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lemon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;firm&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;spice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;crisp&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;raspberry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;apricot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;licorice&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter2' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Reset' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Dashboard%20V2?%5Bfederated.0a5uupe1ux0b1s102pj161f9ac66%5D.%5BWine_type%5D~s0=&lt;[Wine_type]~na&gt;&amp;%5Bfederated.0a5uupe1ux0b1s102pj161f9ac66%5D.%5BWord%5D~s0=&lt;[Word]~na&gt;&amp;%5Bfederated.0a5uupe1ux0b1s102pj161f9ac66%5D.%5Bcountry%5D~s0=&lt;[country]~na&gt;&amp;%5Bfederated.0a5uupe1ux0b1s102pj161f9ac66%5D.%5Bvariety%5D~s0=&lt;[variety]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Reset' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Average Price' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Price,Average Rating,Rating/Price,Reset,Varietal Distribution' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Wine Type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Average Rating' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Price,Average Rating,Rating/Price,Reset,Varietal Distribution' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Rating/Price' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Price,Average Rating,Rating/Price,Reset,Varietal Distribution' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet'>
        <exclude-sheet name='Reset' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Average Rating per Country,Reset,Wine Type' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Varietal Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Price,Average Rating,Average Rating per Country,Rating/Price,Reset,Varietal Distribution,Wine Type' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Words most commonly used in descriptions' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Reset' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <action caption='Filter1' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard V2' type='sheet' worksheet='Average Rating per Country' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Rating per Country,Reset,Varietal Distribution,Wine Type' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard V2' />
      </command>
    </action>
    <datasources>
      <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
    </datasources>
    <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
      <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Word]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Average Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Average Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([price])' function='order' user:ui-marker='order'>
                <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:variety:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' field-type='quantitative' max='68.890090090090084' min='10.0' range-type='fixed' scope='cols' type='space' />
            <format attr='tick-color' value='#00000000' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Average Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([points])' function='order' user:ui-marker='order'>
                <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:variety:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' field-type='quantitative' max='91.0' min='83.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='cols' value='' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6d3d1</color>
                <color>#dcb7b4</color>
                <color>#d29d98</color>
                <color>#c8857f</color>
                <color>#be6e67</color>
                <color>#b35951</color>
                <color>#a9463d</color>
                <color>#9f342a</color>
                <color>#95251a</color>
                <color>#8b170c</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='off' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' z-order='1' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Rating per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='8'>Average Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Varietal]' role='dimension' type='nominal' />
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Varietal)]'>
            <groupfilter function='level-members' level='[Varietal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]'>
            <groupfilter function='member' level='[variety]' member='&quot;Pinot Gris&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([points])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Varietal)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' field-type='quantitative' max='91.0' min='80.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' scope='rows' value='' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rating/Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column caption='Rating/Price' datatype='real' name='[Calculation_4799359487394213892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([points]/[price],2)' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4799359487394213892]' derivation='Avg' name='[avg:Calculation_4799359487394213892:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:variety:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' scope='cols' value='false' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d2e6d3</color>
                <color>#b5dbb7</color>
                <color>#9ad09c</color>
                <color>#81c684</color>
                <color>#6abb6d</color>
                <color>#54b058</color>
                <color>#41a645</color>
                <color>#2f9b34</color>
                <color>#1f9024</color>
                <color>#128617</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' value='off' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
              <tooltip column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]' />
              <tooltip column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]' z-order='1' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Reset'>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column caption='Reset' datatype='string' name='[Calculation_4799359487381843971]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filters&quot;' />
            </column>
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4799359487381843971]' derivation='None' name='[none:Calculation_4799359487381843971:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]'>
            <groupfilter function='member' level='[none:Calculation_4799359487381843971:nk]' member='&quot;Reset Filters&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#00000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Standard Deviation of Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Standard Deviation of Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Stdev' name='[std:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([price])' function='order' user:ui-marker='order'>
                <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:variety:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='ASC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]' field-type='quantitative' max='49.989905918515113' min='5.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6d9da</color>
                <color>#dcc2c5</color>
                <color>#d1adb1</color>
                <color>#c7999e</color>
                <color>#bd868c</color>
                <color>#b2747b</color>
                <color>#a8646b</color>
                <color>#9d555c</color>
                <color>#93464e</color>
                <color>#893a42</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Standard Deviation of Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'> Standard Deviation of Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column-instance column='[points]' derivation='Stdev' name='[std:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([points])' function='order' user:ui-marker='order'>
                <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:variety:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='ASC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]' />
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]' field-type='quantitative' max='3.4821447395762788' min='2.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6d8d7</color>
                <color>#dcc0be</color>
                <color>#d1aaa7</color>
                <color>#c79592</color>
                <color>#bd817e</color>
                <color>#b26f6b</color>
                <color>#a85e59</color>
                <color>#9d4e49</color>
                <color>#93403b</color>
                <color>#89332e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[std:points:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Varietal Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Varietal Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='8'>Varietal Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([points])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([points])' function='order' user:ui-marker='order'>
                <groupfilter expression='[variety]=&apos;Riesling&apos; OR [variety]=&apos;Rosé&apos;&#10;OR [variety]=&apos;Sauvignon Blanc&apos; OR [variety]=&apos;Cabernet Sauvignon&apos;&#10;OR [variety]=&apos;Nebbiolo&apos; OR [variety]=&apos;Gamay&apos;&#10;OR [variety]=&apos;Malbec&apos; OR [variety]=&apos;Syrah&apos;&#10;OR [variety]=&apos;Sangiovese&apos; OR [variety]=&apos;Pinot Gris&apos;&#10;OR [variety]=&apos;Chardonnay&apos; OR [variety]=&apos;Zinfandel&apos;&#10;OR [variety]=&apos;Tempranillo&apos; OR [variety]=&apos;Grüner Veltliner&apos;&#10;OR [variety]=&apos;Pinot Noir&apos; OR [variety]=&apos;Gewürztraminer&apos;&#10;OR [variety]=&apos;Cabernet Franc&apos; OR [variety]=&apos;Viognier&apos;&#10;OR [variety]=&apos;Merlot&apos; OR [variety]=&apos;Pinot Grigio&apos;' function='filter' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:variety:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[cnt:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]' scope='cols' value='false' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Wine List'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Wine List</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[variety]' derivation='None' name='[none:variety:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>2</min>
            <max>11</max>
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Agiorgitiko&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Aglianico&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Albana&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Albariño&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Albarossa&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Alfrocheiro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Alicante Bouschet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Aligoté&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Alsace white blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Altesse&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Alvarinho&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Antão Vaz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Aragonês&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Aragonez&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Arinto&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Arneis&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Assyrtico&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Assyrtiko&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Austrian Red Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Austrian white blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Auxerrois&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bacchus&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Baco Noir&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Baga&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Barbera&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Black Monukka&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Black Muscat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Blaufränkisch&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bobal&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bonarda&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bordeaux-style Red Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bordeaux-style White Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Bovale&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Brachetto&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Franc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Franc-Malbec&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Franc-Merlot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Carmenère&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Malbec&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Merlot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Merlot-Shiraz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Sangiovese&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Shiraz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet Sauvignon-Tempranillo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cabernet-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cannonau&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carignan&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carignan-Grenache&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carignan-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carignane&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carignano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carmenère&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carmenère-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carmenère-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Carricante&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Casavecchia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Castelão&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Catarratto&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cesanese&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cesanese d&apos;Affile&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chambourcin&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Champagne Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Charbono&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chardonnay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chardonnay-Pinot Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chardonnay-Sauvignon Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chardonnay-Semillon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chardonnay-Viognier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chenin Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chenin Blanc-Chardonnay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Chenin Blanc-Viognier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cinsault&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Coda di Volpe&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Colombard&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Colombard-Sauvignon Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Colombard-Ugni Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Cortese&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Corvina&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Corvina, Rondinella, Molinara&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Counoise&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Debit&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Dolcetto&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Dornfelder&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Durella&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Elbling&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Emir&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Encruzado&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Erbaluce&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Falanghina&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Fer Servadou&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Fernão Pires&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Feteasca Neagra&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Feteascǎ Regalǎ&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Fiano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Frappato&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Friulano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Fumé Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Furmint&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;G-S-M&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gaglioppo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gamay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gamay Noir&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Garganega&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Garnacha&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Garnacha Blanca&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Garnacha-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Garnacha-Tempranillo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gelber Muskateller&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gewürztraminer&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Glera&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Godello&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Graciano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grauburgunder&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grecanico&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grechetto&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Greco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Greco Bianco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache-Carignan&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache-Mourvèdre&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grenache-Shiraz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grillo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grolleau&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Groppello&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gros and Petit Manseng&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Gros Manseng&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Grüner Veltliner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Hondarrabi Zuri&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Insolia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Inzolia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Jacquère&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Kalecik Karasi&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Kekfrankos&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Kerner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Kisi&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lagrein&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lambrusco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lambrusco di Sorbara&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lambrusco Grasparossa&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lambrusco Salamino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Lemberger&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Listán Negro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Loureiro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Macabeo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Magliocco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malagousia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec-Merlot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec-Petit Verdot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malbec-Tannat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malvasia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malvasia Istriana&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Malvasia Nera&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Manzoni&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Marawi&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Maria Gomes&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Marsanne&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Melon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Mencía&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Meritage&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Merlot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Merlot-Cabernet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Merlot-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Mission&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Monastrell&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Monastrell-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Monica&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Montepulciano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Moscatel&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Moscato&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Moschofilero&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Mourvèdre&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Müller-Thurgau&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muscadelle&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muscat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muscat Canelli&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muscatel&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muskat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Muskat Ottonel&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Narince&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nascetta&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nebbiolo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Negrette&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Negroamaro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nerello Cappuccio&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nerello Mascalese&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nero d&apos;Avola&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nero di Troia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Neuburger&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Norton&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Nosiola&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Orange Muscat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pallagrello&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pallagrello Nero&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Palomino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pansa Blanca&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Papaskarasi&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Passerina&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pecorino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pedro Ximénez&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Perricone&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Petit Manseng&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Petit Verdot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Petite Sirah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Petite Verdot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Picolit&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Picpoul&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Piedirosso&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pigato&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Auxerrois&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Bianco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Grigio&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Gris&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Meunier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Nero&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Noir&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot Noir-Gamay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinot-Chardonnay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Pinotage&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Plavac Mali&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Port&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Portuguese Red&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Portuguese Rosé&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Portuguese Sparkling&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Portuguese White&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Portuguiser&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Posip&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Prieto Picudo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Primitivo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Prosecco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Provence red blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Provence white blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Prugnolo Gentile&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Raboso&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Red Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Refosco&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rhône-style Red Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rhône-style White Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Ribolla Gialla&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rieslaner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Riesling&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rkatsiteli&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rosado&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rosato&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rosé&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Roter Veltliner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Rotgipfler&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Roussanne&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Roussanne-Viognier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Ruché&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sagrantino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sangiovese&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sangiovese Cabernet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sangiovese Grosso&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sangiovese-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Saperavi&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sauvignon Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sauvignon Blanc-Semillon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Savagnin&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Savatiano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Schiava&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sciaccerellu&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sémillon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Seyval Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sherry&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Shiraz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Shiraz-Cabernet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Shiraz-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Shiraz-Grenache&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Silvaner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Siria&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sousão&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Souzao&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sparkling Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Spätburgunder&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;St. Laurent&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Sylvaner&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Symphony&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Cabernet Franc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Grenache&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Merlot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Mourvèdre&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Petit Verdot&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Petite Sirah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Syrah-Viognier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tamjanika&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tannat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tannat-Cabernet&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tannat-Cabernet Franc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tannat-Syrah&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tempranillo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tempranillo Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tempranillo-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tempranillo-Garnacha&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tempranillo-Shiraz&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Teroldego&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Timorasso&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinta Cao&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinta de Toro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinta Fina&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinta Miúda&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinto del Pais&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tinto Fino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tocai Friulano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Tokay&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Torbato&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Torrontés&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Touriga&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Touriga Franca&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Touriga Nacional&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Touriga Nacional Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Touriga Nacional-Cabernet Sauvignon&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Traminer&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Traminette&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Trebbiano&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Treixadura&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Trepat&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Trincadeira&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Trousseau Gris&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Turbiana&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Uva di Troia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Uvalino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Valdiguié&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Verdejo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Verdejo-Viura&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Verdelho&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Verdicchio&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Verduzzo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Vermentino&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Vernaccia&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Vidal&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Vidal Blanc&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Vignoles&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Viognier&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Viognier-Gewürztraminer&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Viosinho&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Viura&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Weissburgunder&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Welschriesling&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;White Blend&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Xarel-lo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Xinomavro&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Zibibbo&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Zierfandler&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Zinfandel&quot;' />
              <groupfilter function='member' level='[none:variety:nk]' member='&quot;Zweigelt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[:Measure Names]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[cnt:Number of Records:qk]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk] / [federated.0a5uupe1ux0b1s102pj161f9ac66].[none:title:nk])</rows>
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Wine Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='8'>Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Varietal]' role='dimension' type='nominal' />
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Wine_type]' derivation='None' name='[none:Wine_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Varietal)]'>
            <groupfilter function='level-members' level='[Varietal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]'>
            <groupfilter function='member' level='[variety]' member='&quot;Pinot Gris&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]'>
            <groupfilter function='level-members' level='[Word]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]' direction='DESC' using='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Varietal)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='8' />
            <format attr='height' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]' />
              <text column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]' />
              <lod column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0a5uupe1ux0b1s102pj161f9ac66].[pcto:sum:Number of Records:qk:4]</cols>
      </table>
    </worksheet>
    <worksheet name='Words most commonly used in descriptions'>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-130k-v2' name='federated.0a5uupe1ux0b1s102pj161f9ac66' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5uupe1ux0b1s102pj161f9ac66'>
            <column datatype='integer' name='[Cnt]' role='measure' type='quantitative' />
            <column caption='Wine type' datatype='string' name='[Wine_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cnt]' derivation='Sum' name='[sum:Cnt:qk]' pivot='key' type='quantitative' />
            <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]'>
            <groupfilter function='member' level='[variety]' member='&quot;Pinot Gris&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]'>
            <groupfilter function='level-members' level='[Wine_type]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Variety)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Country)]</column>
            <column>[federated.0a5uupe1ux0b1s102pj161f9ac66].[Action (Wine type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Word:nk]' />
              <size column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Cnt:qk]' />
              <text column='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard V2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='81' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='79' type='layout-basic' w='98828' x='586' y='1042'>
              <zone h='89565' id='62' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                <zone h='89565' id='59' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                  <zone h='89565' id='55' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                    <zone h='89565' id='52' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                      <zone h='89565' id='49' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                        <zone h='89565' id='46' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                          <zone h='89565' id='43' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                            <zone h='89565' id='40' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                              <zone h='89565' id='37' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                <zone h='89565' id='35' type='layout-basic' w='98828' x='586' y='5227'>
                                  <zone h='47768' id='33' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                    <zone h='47768' id='30' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                      <zone h='47768' id='27' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                        <zone h='47768' id='24' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                          <zone h='47768' id='19' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                            <zone h='47768' id='16' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                              <zone h='47768' id='11' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                                <zone h='47768' id='8' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                                  <zone h='47768' id='5' param='horz' type='layout-flow' w='98828' x='586' y='5227'>
                                                    <zone h='47768' id='3' type='layout-basic' w='98828' x='586' y='5227'>
                                                      <zone h='47768' id='76' type='layout-basic' w='98828' x='586' y='5227'>
                                                        <zone h='47768' id='63' param='horz' type='layout-flow' w='67789' x='586' y='5227'>
                                                          <zone h='47768' id='28' name='Average Price' w='33894' x='586' y='5227'>
                                                            <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                                                            <zone-style>
                                                              <format attr='border-color' value='#000000' />
                                                              <format attr='border-style' value='none' />
                                                              <format attr='border-width' value='0' />
                                                              <format attr='margin' value='4' />
                                                            </zone-style>
                                                          </zone>
                                                          <zone h='47768' id='31' name='Average Rating' w='33894' x='34480' y='5227'>
                                                            <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                                                            <zone-style>
                                                              <format attr='border-color' value='#000000' />
                                                              <format attr='border-style' value='none' />
                                                              <format attr='border-width' value='0' />
                                                              <format attr='margin' value='4' />
                                                            </zone-style>
                                                          </zone>
                                                        </zone>
                                                        <zone h='47768' id='77' param='horz' type='layout-flow' w='31039' x='68375' y='5227'>
                                                          <zone h='47768' id='75' name='Rating/Price' w='31039' x='68375' y='5227'>
                                                            <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                                                            <zone-style>
                                                              <format attr='border-color' value='#000000' />
                                                              <format attr='border-style' value='none' />
                                                              <format attr='border-width' value='0' />
                                                              <format attr='margin' value='4' />
                                                            </zone-style>
                                                          </zone>
                                                        </zone>
                                                      </zone>
                                                    </zone>
                                                  </zone>
                                                </zone>
                                              </zone>
                                            </zone>
                                          </zone>
                                        </zone>
                                      </zone>
                                    </zone>
                                  </zone>
                                  <zone h='37631' id='67' type='layout-basic' w='98828' x='586' y='57161'>
                                    <zone h='37631' id='64' param='horz' type='layout-flow' w='40557' x='586' y='57161'>
                                      <zone fixed-size='487' h='37631' id='34' is-fixed='true' name='Varietal Distribution' show-title='false' w='40557' x='586' y='57161'>
                                        <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                    </zone>
                                    <zone fixed-size='507' h='37631' id='44' is-fixed='true' name='Average Rating per Country' show-title='false' w='24158' x='41143' y='57161'>
                                      <layout-cache type-h='fixed' type-w='cell' />
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='37631' id='78' name='Words most commonly used in descriptions' show-title='false' w='31771' x='67643' y='57161'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                    <zone h='37631' id='82' type='empty' w='2342' x='65301' y='57161'>
                                      <zone-style>
                                        <format attr='border-color' value='#000000' />
                                        <format attr='border-style' value='none' />
                                        <format attr='border-width' value='0' />
                                        <format attr='margin' value='4' />
                                      </zone-style>
                                    </zone>
                                  </zone>
                                  <zone h='4166' id='73' type='empty' w='98828' x='586' y='52995'>
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='4185' id='53' name='Wine Type' show-title='false' w='31063' x='37287' y='1042'>
                <layout-cache minwidth='100' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4185' id='65' type='empty' w='19862' x='68350' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='4185' id='66' type='text' w='36701' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4185' id='69' name='Reset' show-title='false' w='11202' x='88212' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='4166' id='70' type='text' w='38872' x='586' y='94792'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='8'>Varietal Distribution</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='4166' id='71' type='text' w='27160' x='39458' y='94792'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='8'>Average Rating</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='4166' id='72' type='text' w='32796' x='66618' y='94792'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='8'>Words most commonly used in descriptions</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Varietal Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Wine List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</field>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:title:nk]</field>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rating/Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Varietal:nk]</field>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Standard Deviation of Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Standard Deviation of Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Varietal Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</field>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Rating per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Wine Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]</field>
            <field>[federated.0e5zm181mu1st11b44bp80y7ytjz].[none:Varietal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Reset'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Words most commonly used in descriptions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Word:nk]</field>
            <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard V2'>
      <viewpoints>
        <viewpoint name='Average Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Rating'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Rating per Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rating/Price'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:Calculation_4799359487394213892:qk]</field>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:points:qk]</field>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[avg:price:qk]</field>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:variety:nk]</field>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[sum:Number of Records:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>4.5611646297627599</value>
                  <value>88.496219931271483</value>
                  <value>23.074047447879224</value>
                  <value>&quot;Pinot Gris&quot;</value>
                  <value>10185</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Reset'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Calculation_4799359487381843971:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Reset Filters&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Varietal Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wine Type'>
          <zoom type='entire-view' />
          <highlight field='[federated.0a5uupe1ux0b1s102pj161f9ac66].[none:Wine_type:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Words most commonly used in descriptions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='53' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average Price' width='384'>
      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
      /7bxph8cbyYOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Average Rating' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Average Rating per Country' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard V2' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Rating/Price' width='384'>
      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
    </thumbnail>
    <thumbnail height='56' name='Reset' width='288'>
      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
      CN1IAhJC6ObvFVfxjzgwrMAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Standard Deviation of Price' width='384'>
      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
      BEEQtqh/AK5++tOOienyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Standard Deviation of Rating' width='384'>
      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
      F4tIRmRCTKL9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Varietal Count' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3AVd5rw+293n6ycA1GAEEkgcgbbOIEzzmuP7cmzEzy77+xbdffW/WOq
      btV9d3dmd3Z2xjPOEYxxAmNjTDI55xwkJJRzPDq5w/1DsgCDCTYgn6PnU2WXfU53n18fSf30
      L/TzKJZlWQghhOhz1N5ugBBCiN4hAUAIIfooCQBCCNFHSQAQQog+SgKAEEL0URIAhBCij5IA
      IIQQfZQEACGE6KMkAAghRB8lAUAIIfooCQBCCNFHSQAQQog+SgKAEEL0URIAhBCij5IAIIQQ
      fZQEACGE6KMkAAghRB8lAUAIIfooCQBCCNFHSQAQQog+SgKAEEL0URIAhBCij5IAEEUMw+jt
      Jtxw4XAYy7J6uxk3VCgU6u0m3HCmaRKJRHq7GTecrutR/XcpASCKmKbZ20244XRdj/kAoOt6
      bzfhhrMsq0+cp2EYUf13aevtBoirF44YhPTYvjgGghF0S0VVY/fexB+MYKnh3m7GDWWaJuFw
      BAOtt5tyQ4XDEVRFwRalf5cSAKLI22sO88Xu0t5uhhAiRsTubZYQQojLiu0AYIbYs2M727dv
      Z/vOXZRV1aGbJmYkxIF9+wlFrn3yxrK6uraXUl58jCMnSvmqM6gHfRw7VYJ5mTHt+soSiivr
      r7kdQgjxXcV4APCz6tMNGJZFxN/BskUv88W2w5imQWtHO+a3GLbzNpbw4drdl3zv8La1vPHW
      O1Q0egGI+NvYvH3bZT/H19lB8BsCihBC3EixPQeggDspmxkzZ6JhUZg/kHdW7YTpo0lPT0dV
      wNfWQGl1G/6Wamqa2skZNJKpEwrAMik5sp+jJRXY3EnMuWUObsPLtu17KDnjZYMnTGJGPyaO
      GX7u4xSYOW0Uq9dt4cdPzEdB6XnPNCMc2buLM1X1JKRkM3vWVFx2G6kp6RgRBwAnD+8jN380
      Z4/up9OWxozxBTf9KxNC9B2x3QP4mlAoAIoKZohtO3cRCBu0N1fzzutvUO+zGDZ0IBs+WkxD
      wKDs8FaWfLGLvPwC4sxmXn7lbUKmgsthR1E0nE4nTqfros8YPnEu4ZrDFFe3nveqxf71n7Bh
      XzEFI0bgqzvJa0vXYgJNZSc4VlwBwIFta/hw8Tts2ldMQvzFxxZCiOsptnsAgK+lkuUfL0MP
      dXL6VBnzFj6Nqpy7M1eA0ZNu4767bkNR4NSu9XQGdQ7t3sd9jz5NUV4G1pgRlP71v6nvVCka
      W8CJ9gZmzJhxyc+zueK565apfPbFOn6+cBYAlh5k76kaFj7+QwZmJDAyfxB//rf/oTV4V08b
      ACLhMEb6QH720O04bbG9fE4I0ftiPgDY3HEUFhXh0FQW3P8o8R4nlu6/YBtFVXuuwl3BwSIc
      grTkuO4tVJKSk4noRlefSeGyhhXNIHnrn9hfMrRrW8vCcriIc3UN9ah2D6nJCuGvrR12uDzc
      cuetcvEXQtwUMT8E5HSnMnRIHoMHDSIhzoWiXOHqDYBCRnYCe/efxAJCvmbKKxpISYpDQSXQ
      2YFuWnzT4h5FczL/njvZsPoLAhELRbOTZAU4XloFQFtNCVXeOJLdX7vQK1xl+4QQ4ruL7R6A
      paDZLn2Kdoe962KrKKjKuTio2uzYNZXp8xbw0stv8sLpPXgbahl32wNkJjoxnIOIa1vOX/5S
      RWr/UTz78B09+2o2G3a16wKeNWQsw7M3UBwyQbVzx/y7eP2tdzi+ux/1tXXc/uDTuDVQNBWb
      Zu/aX9UkAAghbhrFivXEK9+BZRq0tbXhcMcT53b2vG4aBn6/H5cnDpt29Z0oU4/Q2tZBXEIi
      Lqf9mtvz9+W75UlgIcR1E9s9gO9IUTVSUtMuel3VNOITEq75eKrNTlr6xccTQojeIAEgikwq
      yCEtKe7KG0axSCSCzWaL6aGwcDiMw+Ho7WbcUF9lA7Xbr72nG00M3UBRFNRrGAn4PpEhoCgS
      iURi/g/K7/fjcrliOhuoz+cjLi62A7lhGITDYdxud2835YYKhUKoqhq1f5ex+1cmhBDisiQA
      CCFEHyVzAFGkrLaNxvZAbzfjhgqFw9jt9gue1o41wVAIl9N55Q2jmGla6Hok5uc6IrqOoijY
      tOh8eFMCQBRZv79MloEKIa6b2BsCskx8vut1l2wR8PvRjeit+SmEEN8kqnsAkYCXtas/59jp
      szjikrn73gcY4Orkw22neXbhgu/+AZbByo+XM/3u++iXfu3r/oUQ4vssagOAqQd57+1XMDML
      +fmv7ifYWkNjMIhh0/GHQliWhWHoqJqtZzzZsixM00RR1YvHmC0Li3O5eCzLxLIsQoHABQVd
      dD0CinrRmJ9pGpimhaZdmM7BNE1M00Sz2XpyyFmWiWlaqKpGDA91CyG+56I2ADRXn6HGF89v
      75uHy6aSGDeUTMBbfRJvYy3vvf0aLV4/7rSBPPHI/dhCLbz/4TI6Al0X6lvnP8jovCy2bVhP
      v2GjOLh9PT5bBo8tvJvTB7awccchFAWqqtqYA1hGhJ0bV7PnaBkWChPn3M7MogIOb1tLZUeE
      itIyIkaYCXPvY3ZRPsf3bOJUbSd1VWcJRwzGTLqVW2eOoeLoAVZt3oGiKDgSs1j44L3UHttO
      o9aP2ROHowCHd6whklrIxIKcXv6WhRCxLGrnALxtDWQPG43TdvEpBH0+CmfcwTPP/hCltZSy
      6lYsy2Lc1Hn84OmnmT93Aqs//4ygYVFbeYbF77yBmTKI+XfMprPqKEtX72fBQ4/z9FP/wKDc
      dACqi/ez8VAdT/zgGZ58ZD7bli+l2humpa6C2naTR558mqcW3smGddswgNaGWmob/TzwyBM8
      uXA+R/ZuIhixsLniuW/hYzz19FPkaG1s2HWKtMx0tm76klDEwNL9bPpyN+mZqTf5GxVC9DVR
      2wOwTPOCkovnyxw8jDH5gwDISs/AMHRsrkSCLcf4dP8O9EiIkB7EMC0UU2f0tNu5/7apqIrC
      9u0nmT7nTvL6ZYIV6cnhX36ymOm3zSUzNQlIYtqkIZwuqUcBJkybRmZaMiSD29jZ1QhFpXDi
      FHIz04j4bMTFaZgWJCQnsHPnNhpbO/G2tpHk9pExYAL97Ks4craRAWo9kdQ8BibH9vI5IUTv
      i9oeQHxyOrWlJ4joF6/QsS7xfwe3rGVPcRMzZs/l1rmzSHJ3xz4tjtEFw3vmBEzLwKFd/Fi3
      ZX29DozS80HnPu/yWTUsU2f5e2+iJPfn1nnzmFQ0ElXtqh8wa9YUtm/dzrEDBxg7eQoyOSCE
      uNGiNgBk9M8nW6tn+ZpNtLS2UV99ltNnqi/e0Or6p7W9hUGDh5GekkhTbQXtfv2CTb7SLyeb
      vXu20NjSTkNtNTWNXbV9B48Yxo6Nm2lsbaexppRd+86QPyzr8o38WjywLAOvz2DokDw8TpWK
      s+WY3fFrSOEUrKpDbCppo6hg4JWKjgkhxHcWtUNAqt3Do8/8lFWfreS9JScxTZO5Cx7E5opj
      cL/snu0ycgeQEOdi0LS5LP14BUtO7yIxLYeRw4eiqQrZ/Qb0DPMADB47g4ln61i65F0cDjc5
      g4fgdtpJHT6B2VUNLF3yLqphMv2+R+mf6KA1ZwAeT/f+ioOh+XkoQEpmDmaip+tlm428QXk4
      7U5mzZnG58s/wKGp5Ob0IyMruXsbD5PH53OkM53U+Nh+SlQI8f0Q9dlAe5Z2KsoVMkhaGIaB
      aYLNdvnKW1+lslU1De2CY1pEIt3LQM9b1nmNDUbXdRRVQ+tOIWtZFuFAB2+/8jJT7nuOcUMy
      LrmrFIQRQlxPUdsD+IqiKGhXlYdDQdNsXM2miqJ8Q3pXBbv9O07OKgq2rx1b97exeNEissfe
      QuE3XPyFEOJ6i/oeQF9S09iON6hfecMoFgoGcTgcKDFcDyAYCOCK8Tz5lmkSiURwxHjSu0gk
      gqp8c+3x7zsJAFFECsLEBikIEzukIIwQQoioJAFACCH6qOgcuOqjth6p4Hh5S28344bSdf2i
      hHqxRtcj2GzROWRwtSzLwjSMqB0bv1qmYcAVVyB+f8X2TyfGnKxoZs0eWQYqhLg+rjJsWYSC
      AbxeL4Fg6LIJDxprKglEer+AimVZBAN+vF4vwVCY6zbXbVmEQyEpEiOEiHpX7gFYJif2bmbl
      ht1odgempXD/Uz8hP+vSqxjWfbqEWU/+MwPsN75LFGhroKIlRMGQAV9rssGezavYsu8kmqph
      mBYz71jItLGDr8Onmqxe8QEjZs0nPyftOhxPCCF6xxUDQEvtGT5ctY2nfvILBmUl09nRAo6u
      8UvLMomEI2g2B5rWNWaroKBg4ff7cThd2LRzgSAcDBA2LOLiPBc9RWuZJihK19ivZeL3B7A7
      Xdht557cCgZ8mGi43S4UoLnyDPvLAhcFgHCghS3bjvPkP/4jWUluOloa8OmunvcjkQiWomD/
      Vk/zqtw2/wEc7nMB0DQNIhEDh8N+wdi1ZZoEAn7sLg/2r74Hy8Tv96HYnLidFz5UZugRguEI
      brc7pouiCyG+H64QACxO7t3BmNn3kJebhgIkpXQ9qdp45jivL12G3R1HW2srdz38DDPHDSUS
      CvDOi/+D22mnqamDR5/7CWPzMtm+ehmbDp8l0QlK0iB+/PRCmsoOsPFgKwl6GXuON/LcLx5n
      0d8XkZDsBpuDtuYwv/yXX5OVYGfth+9ysKoNpxkgafB47ps1lLeWrqAlbFJ2dCf54+bwyIJZ
      3Uk0VSKRIK3tXrKS40nJyCUFMMNeFr31JjUtQYgESBo0jp89/QDHd6yixhrCXTMLMPUgr/zl
      ZX7w/K9Z+sIfmf7IzxmRm0Soo4GX3vyIn/z8J2z79CNyZi5gzIB0Du5Yx6drt+PxxOHtaGb6
      3T9i9lCVP72+FI/NhmLXaPNb/PI3z5PqCPL2Sy/SFLFjhDoYMv52Hrl7Jqe2rWTFrtMQCWNX
      dWxZo/ntsw/G9ESoEKL3XT4AWBatbUEGjcq46E45MXsA//hPvyPR46K18igvfbSTaeOGotkc
      3P8PP2ZUv2RKD23j0/VfkvfwXLYdquIXv/4NyS54/9W/caS8iWzL4vDO1Yy/9W7+r//nOexG
      M05XGj/4yXNkJMexZsnLlDe2o7U2c6ze4DfP/waHGeS1P/83rbfO5dnH72NraYAnHrjtgrY5
      PCncs2AOny15ndUJ6UydMZOpRaPRNBcLFv6AtNQkjEiAV//nj9R03gOmhW4a5w6gRwCVsaOG
      sf/QcQpyp1F15hierDxcDhuWoaNYFr6WalZvOsKPf/U7+qUn8OWKNwkbFpZl4U7K4LmnnyY1
      ycOyRa9QXdtKdfUO1H7j+d3COzACrbz019eonDQWyzLolz+Ox+bPxW56+T//uRgdiO11IkKI
      3naFHoCC06biD0Uueifoa2XZJyupb+5AUw0iar+uPTSNxMR4FEWhf95wPPtP4fc20RrS2bph
      DQAdukFbW4CcBBg4cjKPLpiHTVMI+8CdmEpaSgIKEBfnxrLA622iMxRk3RcrAYWQBu1tQTx0
      Dxl9PVO/olI4eS7Dx06lqqyY1as+o6q5k0duGceB7es5eKIERdVoamgncpnJ3BETJrPpzRX4
      bpvC/v1HmTT3UdTzPioY6CQlYyg5aV0F45Xz3vQkp5Ka1JUNNM7tBizqW5spLJqLTVWwxaUw
      dmgq9W1e4oGMnGxcDhuYDtxXldtICCG+m8sHAAX6DR3Amp37mDZyELaeC5zFxpUfM2DiAp4Z
      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
      UF/1Da99sJGK4jIqH/o1ry/4mF89MA+bCug91O7eSHtvE7+8635KC7No2e/hDxddjVXVeffF
      p/h2WxNzJnjobA9w64O/piTPx/y//W+KJt3MbZNLWf7mi+xuaiV7VBad3d0Yhkk8Gsbvj3PP
      /f9ElsfK/D/9fzT649R/+QHO4pncc9lMmneu4ZWFn/DYI3fQdaCe1195i0uuvJaZk0adia9G
      CDGMnZEmIAXQ44kmkuKK8YwpzWHTjt2AQUNtA5a4n5UrVlDbEcToaULLLMEXb6a5O8CuXc1c
      dc2l7N2xi64DtSjeYlJd3z+KY8L5v+DKC2ZgtybiW6Cjkdfe+5Ibf3Ur6S5bIj2/ovaXLNF0
      ZLU6ufXOeykvzEYFYoEOXpn/LE888Qw76luJRyKJ/VxpFOX5AHCmplOYl4eqqHjT3cTixzbn
      5I4oJ9PrAtWK1+vCMHUaaxuwGX2sXLGCva190NNExAAUCxdedwvnTBmNJjNhhRCn2RmpAeT6
      fGyv2s7E0vPIH1lGdoYDy+o6AFRVxe72kO61A+lcdX05dtXKqJJCdm74hh53HuNLSlj+1Sa2
      bOpibOUUtGM+4cj2/9Ly4oNb4pEA77z5BjMvuZ6yvPSD+xydAsl+LwaKAAAQ0ElEQVTuySUv
      KxWAcHcrCz/8jGtuu5d8n4eNX35I+BTej1VVxebykJ6eSAp39c3XY1dBs1kpHpEvawEIIc6I
      M/KYOXnWHBrXL2bRslXU79/Pzuq9ROMGoDFm4niqduwmNc2H066xd3c1cRPGTRzD558toqB4
      FFZ3OiMdUZZv2sPo8lIANOLU1NbQuL+Gld+sIXSC/uNVi9+hKe4j36uwd/ceuvtCaBYrfn8b
      u/fWsX9/I3qiL/cg3YijKxZUU6epbhffbqqC745/En2zhx/u2E5oldETxlFdtRuPNx2308re
      XVXH7ZAWQojTSXv88ccfP90fYrWnMHbMKGp2bmdPTS0HusLMnXMe2b5UcopKMHsa2biliqaW
      dirGTyE3Mw2HO5VYMMi0s8/G63LgdttRXTlMn1CGqkCGz8uW9WupbWgmI6eIgoIiivKziUXC
      pOUU4XUmlmlsqKtB1TRamptobmrGm1NIdoaPNKfK2nUb6A7EKCsvJhrWKS0rQgGsdjcuNcLq
      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
    </thumbnail>
    <thumbnail height='384' name='Varietal Distribution' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Wine List' width='384'>
      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
    </thumbnail>
    <thumbnail height='72' name='Wine Type' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABICAYAAAD/CyLSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABYElEQVR4nO3XsWkEQRAAwX0h6+Dzj0KGbIW1sO4qiD/upO+qAIaBMZp57L33ACDn4+4F
      ALiHAABECQBAlAAARAkAQJQAAEQJAECUAABECQBAlAAARAkAQJQAAEQJAECUAABECQBA1MsB
      WGudsQf/wJxzzDnvXoOLuPf78wEARAkAQJQAAEQJAECUAABECQBAlAAARH2eMeTn++uMMQBc
      yAcAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABD12Hvv
      VwastcZxHGftwx825xxjjPF8Pm/ehCu49/vzAQBE/QLu9yHoOAyd2AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Words most commonly used in descriptions' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3Qk130n+u+t6ojYjZwHg8EEzAwmcDjDIYdhKIrDHCRLlGVZWqe1vfv2
      eP3st89re/3sdVzZb5/tXZ89DsdPkp8l0YqkTFFMGg4phsk5JwxyDg2g0amq7vujBqGBbqC7
      0QFAfT9Hc8RGA12FBnC/VTf8rpBSShARkeUouT4BIiLKDQYAEZFFMQCIiCyKAUBEZFEMACIi
      i2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjI
      ohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKy
      KAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgs
      igFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKL
      YgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMii
      GABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIo
      BgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyK
      AUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIoti
      ABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIY
      AEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigG
      ABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoB
      QERkUQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IA
      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
    </thumbnail>
  </thumbnails>
</workbook>
